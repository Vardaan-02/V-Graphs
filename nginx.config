user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 100M;
    

    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    upstream spring_backend {
        server workflow-spring-backend:2706;
    }
    
    upstream fastapi_executor {
        server workflow-fastapi-executor:8000;
    }
    
    upstream kafka_ui {
        server workflow-kafka-ui:8080;
    }
    
    upstream redis_commander {
        server workflow-redis-commander:8081;
    }
    
 
    server {
        listen 80;
        server_name V Graph-back.pearl99z.tech www.V Graph-back.pearl99z.tech;
        
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
       
        location / {
            return 301 https://$host$request_uri;
        }
    }
    

    server {
        listen 443 ssl http2;
        server_name V Graph-back.pearl99z.tech www.V Graph-back.pearl99z.tech;
        
      
        ssl_certificate /etc/letsencrypt/live/V Graph-back.pearl99z.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/V Graph-back.pearl99z.tech/privkey.pem;
        
       
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
     
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
    
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://spring_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
           
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
         
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
        
   
        location /executor/ {
            limit_req zone=api burst=20 nodelay;
            rewrite ^/executor/(.*)$ /$1 break;
            proxy_pass http://fastapi_executor;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
      
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
 
        location /kafka-ui/ {
            limit_req zone=general burst=10 nodelay;
            rewrite ^/kafka-ui/(.*)$ /$1 break;
            proxy_pass http://kafka_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
          
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        

        location /redis-ui/ {
            limit_req zone=general burst=10 nodelay;
            rewrite ^/redis-ui/(.*)$ /$1 break;
            proxy_pass http://redis_commander;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }
        
        location / {
            limit_req zone=general burst=5 nodelay;
            return 404 '{"error": "Not Found", "message": "Available endpoints: /api/ (backend), /executor/ (node executor), /kafka-ui/ (Kafka admin), /redis-ui/ (Redis admin)", "status": 404}';
            add_header Content-Type application/json;
        }
    }
}